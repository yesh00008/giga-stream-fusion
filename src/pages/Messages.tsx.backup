import { useState, useEffect } from "react";
import { Search, Send, Settings, Lock, Users, Check, MessageSquare } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Separator } from "@/components/ui/separator";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { supabase } from "@/lib/supabase";
import { useAuth } from "@/lib/auth-context";
import { toast } from "sonner";
import { motion } from "framer-motion";

interface MessagePrivacySettings {
  allow_messages_from: 'everyone' | 'following' | 'none';
  show_read_receipts: boolean;
  show_online_status: boolean;
  allow_group_invites: boolean;
}

export default function Messages() {
  const { user } = useAuth();
  const [searchQuery, setSearchQuery] = useState("");
  const [showSettings, setShowSettings] = useState(false);
  
  const [privacySettings, setPrivacySettings] = useState<MessagePrivacySettings>({
    allow_messages_from: 'everyone',
    show_read_receipts: true,
    show_online_status: true,
    allow_group_invites: true
  });

  useEffect(() => {
    if (user?.id) {
      fetchPrivacySettings();
    }
  }, [user?.id]);

  const fetchPrivacySettings = async () => {
    try {
      const { data } = await supabase
        .from('profiles')
        .select('message_privacy_settings')
        .eq('id', user?.id)
        .single();

      if (data?.message_privacy_settings) {
        setPrivacySettings(data.message_privacy_settings);
      }
    } catch (error) {
      console.error('Error fetching privacy settings:', error);
    }
  };

  const updatePrivacySetting = async (key: keyof MessagePrivacySettings, value: any) => {
    const newSettings = { ...privacySettings, [key]: value };
    setPrivacySettings(newSettings);

    try {
      const { error } = await supabase
        .from('profiles')
        .update({ message_privacy_settings: newSettings })
        .eq('id', user?.id);

      if (error) throw error;
      toast.success('Privacy settings updated');
    } catch (error) {
      console.error('Error updating privacy settings:', error);
      toast.error('Failed to update settings');
    }
  };

  return (
    <motion.div 
      className="flex-1 overflow-y-auto pb-20 lg:pb-0"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.2 }}
    >
      <div className="max-w-5xl mx-auto p-3 sm:p-6">
        <div className="flex items-center justify-between mb-6">
          <div>
            <h1 className="text-2xl sm:text-3xl font-bold flex items-center gap-2">
              <MessageSquare className="text-primary" />
              Messages
            </h1>
            <p className="text-sm text-muted-foreground mt-1">
              Connect with your followers and following
            </p>
          </div>
          <Button
            variant="outline"
            size="sm"
            onClick={() => setShowSettings(true)}
            className="gap-2"
          >
            <Settings size={16} />
            Settings
          </Button>
        </div>

        <div className="relative mb-6">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
          <Input 
            placeholder="Search messages..." 
            className="pl-10"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
        </div>

        <motion.div 
          className="text-center py-16"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
        >
          <div className="w-24 h-24 mx-auto mb-6 rounded-full bg-primary/10 flex items-center justify-center">
            <MessageSquare className="w-12 h-12 text-primary" />
          </div>
          <h2 className="text-2xl font-bold mb-2">Your Messages</h2>
          <p className="text-muted-foreground mb-6 max-w-md mx-auto">
            Send private photos and messages to a friend or group. Messages are end-to-end encrypted.
          </p>
          <Button size="lg" className="gap-2">
            <Send size={18} />
            Send Message
          </Button>
          
          <div className="mt-12 p-6 bg-muted/30 rounded-lg max-w-2xl mx-auto">
            <div className="flex items-start gap-4">
              <div className="p-3 rounded-full bg-primary/10">
                <Lock className="w-6 h-6 text-primary" />
              </div>
              <div className="text-left flex-1">
                <h3 className="font-semibold mb-2">Privacy & Safety</h3>
                <p className="text-sm text-muted-foreground mb-4">
                  Control who can message you and how your messages are handled.
                </p>
                <Button variant="outline" size="sm" onClick={() => setShowSettings(true)}>
                  View Privacy Settings
                </Button>
              </div>
            </div>
          </div>
        </motion.div>
      </div>

      <Dialog open={showSettings} onOpenChange={setShowSettings}>
        <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Settings className="w-5 h-5" />
              Message Settings
            </DialogTitle>
            <DialogDescription>
              Manage your message privacy and preferences
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6 py-4">
            <div className="space-y-3">
              <div className="flex items-start gap-3">
                <Users className="w-5 h-5 text-primary mt-0.5" />
                <div className="flex-1">
                  <Label className="text-base font-semibold">Who can message you</Label>
                  <p className="text-sm text-muted-foreground mt-1">
                    Control who can send you direct messages
                  </p>
                </div>
              </div>
              <Select 
                value={privacySettings.allow_messages_from}
                onValueChange={(value: any) => updatePrivacySetting('allow_messages_from', value)}
              >
                <SelectTrigger className="w-full">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="everyone">Everyone</SelectItem>
                  <SelectItem value="following">People you follow</SelectItem>
                  <SelectItem value="none">No one</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <Separator />

            <div className="flex items-center justify-between gap-4">
              <div className="flex-1">
                <Label htmlFor="read-receipts" className="text-base font-semibold cursor-pointer">
                  Read Receipts
                </Label>
                <p className="text-sm text-muted-foreground mt-1">
                  Let people know when you've seen their messages
                </p>
              </div>
              <Switch
                id="read-receipts"
                checked={privacySettings.show_read_receipts}
                onCheckedChange={(checked) => updatePrivacySetting('show_read_receipts', checked)}
              />
            </div>

            <Separator />

            <div className="flex items-center justify-between gap-4">
              <div className="flex-1">
                <Label htmlFor="online-status" className="text-base font-semibold cursor-pointer">
                  Show Online Status
                </Label>
                <p className="text-sm text-muted-foreground mt-1">
                  Let others see when you're active
                </p>
              </div>
              <Switch
                id="online-status"
                checked={privacySettings.show_online_status}
                onCheckedChange={(checked) => updatePrivacySetting('show_online_status', checked)}
              />
            </div>

            <Separator />

            <div className="flex items-center justify-between gap-4">
              <div className="flex-1">
                <Label htmlFor="group-invites" className="text-base font-semibold cursor-pointer">
                  Allow Group Invites
                </Label>
                <p className="text-sm text-muted-foreground mt-1">
                  Let people add you to group conversations
                </p>
              </div>
              <Switch
                id="group-invites"
                checked={privacySettings.allow_group_invites}
                onCheckedChange={(checked) => updatePrivacySetting('allow_group_invites', checked)}
              />
            </div>

            <div className="pt-4 bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg border border-blue-200 dark:border-blue-900">
              <div className="flex gap-3">
                <Lock className="w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5" />
                <div className="text-sm">
                  <p className="font-medium text-blue-900 dark:text-blue-100 mb-1">
                    End-to-End Encryption
                  </p>
                  <p className="text-blue-700 dark:text-blue-300">
                    All messages are encrypted. Only you and the recipient can read them.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </motion.div>
  );
}
